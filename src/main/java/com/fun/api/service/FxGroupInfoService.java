package com.fun.api.service;

import com.alibaba.fastjson.JSON;
import com.fun.api.aliyunOSS.AliyunUtil;
import com.fun.api.domain.FxGroupInfo;
import com.fun.api.domain.FxGroupUser;
import com.fun.api.domain.QrCode;
import com.fun.api.mapper.FxGroupInfoMapper;
import com.fun.api.mapper.FxGroupUserMapper;
import com.fun.framework.utils.QrCodeUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import java.io.InputStream;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

@Service
public class FxGroupInfoService {

    @Autowired
    private FxGroupInfoMapper fxGroupInfoMapper;
    @Autowired
    private FxGroupUserMapper fxGroupUserMapper;
    @Autowired
    private AliyunUtil aliyunUtil;
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fx_group_info
     *
     * @mbggenerated
     */
    @Transactional(propagation = Propagation.REQUIRED, rollbackFor = {Exception.class}, readOnly = false)
    public int deleteByPrimaryKey(Integer fxId){
        fxGroupUserMapper.deleteByGroupId(fxId);
        return fxGroupInfoMapper.deleteByPrimaryKey(fxId);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fx_group_info
     *
     * @mbggenerated
     */
    public int insert(FxGroupInfo record){
        return fxGroupInfoMapper.insert(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fx_group_info
     *
     * @mbggenerated
     */
    @Transactional(propagation = Propagation.REQUIRED, rollbackFor = {Exception.class}, readOnly = false)
    public int insertSelective(FxGroupInfo record,Integer[] ids,Integer userId,String groupImg){
        record.setGroupState(0);
        record.setCreateTime(new Date());
        record.setUpdateTime(new Date());
        fxGroupInfoMapper.insertSelective(record);
        QrCode qrCode = new QrCode();
        qrCode.setId(record.getFxId()).setEvent("navigateTo").setType("group");
        String message = JSON.toJSONString(qrCode);
        String tem = System.currentTimeMillis()+".jpg";
        InputStream inputStream = null;
        String aliyun ="";
        try {
            inputStream = QrCodeUtils.encode3(message, groupImg, true);
             aliyun = aliyunUtil.aliyun(inputStream, tem);
            record.setGroupQrCode(aliyun);
        } catch (Exception e) {
            e.printStackTrace();
        }
        fxGroupInfoMapper.updateByPrimaryKeySelective(record);
        List<FxGroupUser> list = new ArrayList<>();
            FxGroupUser fxGroupUser = new FxGroupUser();
            fxGroupUser.setGroupId(record.getFxId());
            fxGroupUser.setUserId(userId);
            fxGroupUser.setUserIdentity(0);
            fxGroupUser.setCreateTime(new Date());
            fxGroupUser.setUpdateTime(new Date());
            fxGroupUser.setUserGroupState(0);
            list.add(fxGroupUser);
        for (Integer id : ids){
            FxGroupUser fxGroupUser1 = new FxGroupUser();
            fxGroupUser1.setGroupId(record.getFxId());
            fxGroupUser1.setUserId(id);
            fxGroupUser1.setUserIdentity(2);
            fxGroupUser1.setCreateTime(new Date());
            fxGroupUser1.setUpdateTime(new Date());
            fxGroupUser1.setUserGroupState(0);
            list.add(fxGroupUser1);
        }
        //批量插入
        return fxGroupUserMapper.insertForeach(list);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fx_group_info
     *
     * @mbggenerated
     */
    public FxGroupInfo selectByPrimaryKey(Integer fxId){
        return fxGroupInfoMapper.selectByPrimaryKey(fxId);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fx_group_info
     *
     * @mbggenerated
     */
    public int updateByPrimaryKeySelective(FxGroupInfo record){
        return fxGroupInfoMapper.updateByPrimaryKeySelective(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fx_group_info
     *
     * @mbggenerated
     */
    public int updateByPrimaryKeyWithBLOBs(FxGroupInfo record){
        return fxGroupInfoMapper.updateByPrimaryKeyWithBLOBs(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fx_group_info
     *
     * @mbggenerated
     */
    public int updateByPrimaryKey(FxGroupInfo record){
        return fxGroupInfoMapper.updateByPrimaryKey(record);
    }
}