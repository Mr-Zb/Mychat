<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fun.api.mapper.FxFriendsMapper" >
  <resultMap id="BaseResultMap" type="com.fun.api.domain.FxFriends" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="fx_id" property="fxId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="friend_id" property="friendId" jdbcType="INTEGER" />
    <result column="friend_remark" property="friendRemark" jdbcType="VARCHAR" />
    <result column="is_black" property="isBlack" jdbcType="INTEGER" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="user_state" property="userState" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    fx_id, user_id, friend_id, friend_remark,is_black
  </sql>
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    f.fx_id,
    f.user_id,
    f.friend_id,
    IFNULL(f.friend_remark,u.nick_name) as friend_remark,
    f.is_black,
    u.avatar as avatar,
    u.nick_name
    from fx_friends f
    left join fx_user_info  u on f.friend_id=u.fx_id
    where f.user_id = #{userId,jdbcType=INTEGER}
  </select>

  <select id="selectFriend" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    f.fx_id,
    f.user_id,
    f.friend_id,
    f.friend_remark,
    f.is_black,
    u.avatar as avatar,
    u.nick_name,
    u.user_state
    from fx_friends f
     left join fx_user_info  u on f.friend_id=u.fx_id
    where 1=1 and f.user_id = #{userId,jdbcType=INTEGER}
    and f.friend_id = #{friendId,jdbcType=INTEGER}
  </select>

  <select id="selectByUserIdAndMyId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    f.fx_id,
    f.user_id,
    f.friend_id,
    f.friend_remark,
    f.is_black,
    u.avatar as avatar
    from fx_friends f
    left join fx_user_info  u on f.user_id=u.fx_id
    <where>
        <![CDATA[AND (u.fx_no = '${keyword}' OR u.phone_no = '${keyword}' OR u.nick_name = '${keyword}' OR f.friend_remark='${keyword}']]>
    </where>

  </select>
  <select id="selectByKeyword" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    f.fx_id,
    f.user_id,
    f.friend_id,
    f.friend_remark,
    f.is_black,
    u.avatar
    left join fx_user_info  u on f.user_id=u.fx_id
    <where>
      <if test="keyword != null and keyword != ''">
        <![CDATA[AND (u.fx_no = '${keyword}' OR u.phone_no = '${keyword}' OR u.nick_name = '${keyword}' OR f.friend_remark='${keyword}']]>
      </if>
    </where>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from fx_friends
    where fx_id = #{fxId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from fx_friends
    where fx_id = #{fxId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fun.api.domain.FxFriends" >
    insert into fx_friends (fx_id, user_id, friend_id, 
      friend_remark,is_black)
    values (#{fxId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{friendId,jdbcType=INTEGER}, 
      #{friendRemark,jdbcType=VARCHAR}),#{isBlack,jdbcType=INTEGER}
  </insert>
  <insert id="insertSelective" parameterType="com.fun.api.domain.FxFriends" >
    insert into fx_friends
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fxId != null" >
        fx_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="friendId != null" >
        friend_id,
      </if>
      <if test="friendRemark != null" >
        friend_remark,
      </if>
      <if test="isBlack != null" >
        is_black,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fxId != null" >
        #{fxId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="friendId != null" >
        #{friendId,jdbcType=INTEGER},
      </if>
      <if test="friendRemark != null" >
        #{friendRemark,jdbcType=VARCHAR},
      </if>
      <if test="isBlack != null" >
        #{isBlack,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fun.api.domain.FxFriends" >
    update fx_friends
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="friendId != null" >
        friend_id = #{friendId,jdbcType=INTEGER},
      </if>
      <if test="friendRemark != null" >
        friend_remark = #{friendRemark,jdbcType=VARCHAR},
      </if>
      <if test="isBlack != null" >
        is_black = #{isBlack,jdbcType=INTEGER},
      </if>
    </set>
    where fx_id = #{fxId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fun.api.domain.FxFriends" >
    update fx_friends
    set user_id = #{userId,jdbcType=INTEGER},
      friend_id = #{friendId,jdbcType=INTEGER},
      friend_remark = #{friendRemark,jdbcType=VARCHAR},
      is_black = #{isBlack,jdbcType=INTEGER},
    where fx_id = #{fxId,jdbcType=INTEGER}
  </update>
  <delete id="deleteByIds" parameterType="com.fun.api.domain.FxFriends" >
    delete from fx_friends
    where (user_id = #{userId,jdbcType=INTEGER} and friend_id = #{friendId,jdbcType=INTEGER})
    or(user_id = #{friendId,jdbcType=INTEGER} and friend_id = #{userId,jdbcType=INTEGER})
  </delete>
</mapper>