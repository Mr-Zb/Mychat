<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fun.api.mapper.FxGroupUserMapper">
    <resultMap id="BaseResultMap" type="com.fun.api.domain.FxGroupUser">
        <id column="fx_id" property="fxId" jdbcType="INTEGER"/>
        <result column="group_id" property="groupId" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="user_identity" property="userIdentity" jdbcType="INTEGER"/>
        <result column="user_group_state" property="userGroupState" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="BaseResultMap1" type="com.fun.api.domain.FxGroupInfo" >
        <id column="fx_id" property="fxId" jdbcType="INTEGER" />
        <result column="group_name" property="groupName" jdbcType="VARCHAR" />
        <result column="group_qr_code" property="groupQrCode" jdbcType="VARCHAR" />
        <result column="group_state" property="groupState" jdbcType="INTEGER" />
        <result column="group_avatar" property="groupAvatar" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.fun.api.domain.FxGroupInfo" extends="BaseResultMap1" >
        <result column="group_notice" property="groupNotice" jdbcType="LONGVARCHAR" />
    </resultMap>
    <sql id="Base_Column_List">
    fx_id, group_id, user_id, user_identity, user_group_state, create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from fx_group_user
        where fx_id = #{fxId,jdbcType=INTEGER}
    </select>

    <select id="selectByGroupId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from fx_group_user
        where group_id = #{groupId,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fx_group_user
    where fx_id = #{fxId,jdbcType=INTEGER}

  </delete>
    <insert id="insert" parameterType="com.fun.api.domain.FxGroupUser">
    insert into fx_group_user (fx_id, group_id, user_id, 
      user_identity, user_group_state, create_time, 
      update_time)
    values (
    #{fxId,jdbcType=INTEGER},
    #{groupId,jdbcType=INTEGER},
    #{userId,jdbcType=INTEGER},
      #{userIdentity,jdbcType=INTEGER},
      #{userGroupState,jdbcType=INTEGER},
       #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.fun.api.domain.FxGroupUser">
        insert into fx_group_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="fxId != null">
                fx_id,
            </if>
            <if test="groupId != null">
                group_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="userIdentity != null">
                user_identity,
            </if>
            <if test="userGroupState != null">
                user_group_state,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="fxId != null">
                #{fxId,jdbcType=INTEGER},
            </if>
            <if test="groupId != null">
                #{groupId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="userIdentity != null">
                #{userIdentity,jdbcType=INTEGER},
            </if>
            <if test="userGroupState != null">
                #{userGroupState,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.fun.api.domain.FxGroupUser">
        update fx_group_user
        <set>
            <if test="groupId != null">
                group_id = #{groupId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="userIdentity != null">
                user_identity = #{userIdentity,jdbcType=INTEGER},
            </if>
            <if test="userGroupState != null">
                user_group_state = #{userGroupState,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where fx_id = #{fxId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fun.api.domain.FxGroupUser">
    update fx_group_user
    set group_id = #{groupId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      user_identity = #{userIdentity,jdbcType=INTEGER},
      user_group_state = #{userGroupState,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where fx_id = #{fxId,jdbcType=INTEGER}
  </update>

    <insert id="insertForeach" parameterType="java.util.List" useGeneratedKeys="false">
        insert into fx_group_user
        ( fx_id, group_id, user_id, user_identity, user_group_state, create_time, update_time)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.fxId,jdbcType=INTEGER},
            #{item.groupId,jdbcType=INTEGER},
            #{item.userId,jdbcType=INTEGER},
            #{item.userIdentity,jdbcType=INTEGER},
            #{item.userGroupState,jdbcType=INTEGER},
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.updateTime,jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>

    <select id="selectByGroupIdAndUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
     select
          gu.user_id,
          gu.user_identity,
          gu.user_group_state,
          ui.avatar as avatar,
          IFNULL(ff.friend_remark,ui.nick_name) as remark
    from fx_group_user gu
    left join fx_user_info  ui on ui.fx_id=gu.user_id
	left join fx_friends  ff on (ff.friend_id=ui.fx_id and ff.user_id = #{userId,jdbcType=INTEGER})
	where gu.group_id = #{groupId,jdbcType=INTEGER}
  </select>

    <select id="selectByUserId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
     select
          gi.fx_id,
          gi.group_name,
          gi.group_qr_code,
          gi.group_state,
          gi.group_avatar,
          gi.create_time,
          gi.group_notice
    from fx_group_user gu
    left join fx_group_info  gi on gu.group_id=gi.fx_id
    where gu.user_id = #{userId,jdbcType=INTEGER}
  </select>

    <select id="selectByIds" resultMap="BaseResultMap" parameterType="java.lang.Integer">
     select
          gu.fx_id,
          gu.user_identity
    from fx_group_user gu
    where 1=1
    and gu.group_id = #{groupId,jdbcType=INTEGER}
    and gu.user_id = #{userId,jdbcType=INTEGER}
  </select>

    <select id="selectExist" resultMap="BaseResultMap" parameterType="java.lang.Integer">
     select
        <include refid="Base_Column_List"/>
    from fx_group_user gu
    where 1=1
    and gu.group_id = #{groupId,jdbcType=INTEGER}
    and gu.user_id = #{userId,jdbcType=INTEGER}
  </select>

    <delete id="deleteByGroupId" parameterType="java.lang.Integer">
    delete from fx_group_user
    where group_id = #{groupId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByIds" parameterType="java.lang.Integer">
    delete from fx_group_user
    where 1=1
     and group_id = #{groupId,jdbcType=INTEGER}
    and user_id = #{userId,jdbcType=INTEGER}
  </delete>
</mapper>